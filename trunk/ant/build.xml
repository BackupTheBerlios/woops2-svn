<?xml version="1.0"?>
<!-- 
	Script de Construction ANT
	A.GIULIANI
-->
<project name="Woops2 - Ant War Builder" default="build.war" basedir="../">

	<!-- Configure the context path for this application -->
	<property name="project.name" 	value="Woops2" />
	<property name="build.dir"   	value="${basedir}/build" />
	<property name="src.dir" 		value="${basedir}/src" />
	<property name="src.java.dir" 	value="${src.dir}" />
	<property name="doc.dir" 		value="${basedir}/doc" />
	<property name="doc.api.dir" 	value="${docs.dir}/api" />
	<property name="web.dir" 		value="${basedir}/WebContent" />
	<property name="lib.dir"		value="${basedir}/lib" />
	<property name="dist.dir" 		value="${basedir}/dist" />
	<property name="tomcat.webapps.dir" 		value="D:\java\apache-tomcat-5.5.17\webapps" />
	<property name="tomcat.webapps.bin" 		value="D:\java\apache-tomcat-5.5.17\bin" />
	<property name="project.logs" 		value="C:\logs" />

	<path id="classpath">
		<!-- Ajout des classes
			<fileset dir="${web.dir}/WEB-INF/classes">
				<include name="**/*.class"/>
			</fileset> -->
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<path id="tomcat.classpath">
		<pathelement location="${lib.dir}/tomcat-tasks/catalina-ant.jar"/>
		<pathelement location="${lib.dir}/tomcat-tasks/jasper-compiler.jar"/>
		<pathelement location="${lib.dir}/tomcat-tasks/jasper-runtime.jar"/>
		<pathelement location="${lib.dir}/tomcat-tasks/servlet-api.jar"/>
		<pathelement location="${lib.dir}/commons-logging.jar"/>
	</path>
	<!-- Taches Ant 
	<taskdef resource="org/apache/catalina/ant/catalina.tasks"
	          classpathref="classpath"/> -->

	<!-- Gestion de l'application -->
	<target name="clean" depends="clean_dist">
		<delete dir="${build.dir}" />
	</target>

	<target name="clean_dist">
		<delete dir="${dist.dir}" />
	</target>

	<target name="prepare" depends="clean"
        description="Create build directories.">
		<mkdir dir="${build.dir}/${project.name}" />
		<mkdir dir="${build.dir}/${project.name}/images" />
		<mkdir dir="${build.dir}/${project.name}/WEB-INF" />
		<mkdir dir="${build.dir}/${project.name}/META-INF" />
		<mkdir dir="${build.dir}/${project.name}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/${project.name}/WEB-INF/lib" />
		<mkdir dir="${build.dir}/${project.name}/css" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- Copie des Jar et classes -->
	<target name="copyJars">
		<copy todir="${build.dir}/${project.name}/WEB-INF/lib">
			<fileset dir="lib">
				<!-- libs uniuement dans le repertoire lib
				<include name="**/*.jar" /> 
				<include name="*.dtd" /> 
				-->
				<include name="*.jar" />
				<include name="*.dtd" />
			</fileset>
		</copy>
		<!--
		<copy todir="${build.dir}/${project.name}/WEB-INF/classes">
			<fileset dir="${web.dir}/WEB-INF/classes">
				<include name="**/*.class" />
				<include name="**/*.properties" />
				<include name="**/*.xml" />
			</fileset>
		</copy> -->
	</target>

	<!-- Executable Targets -->
	<target name="build" depends="prepare,copyJars"
     description="Compile Java files and copy static files." >
		<javac srcdir="${src.java.dir}" destdir="${build.dir}/${project.name}/WEB-INF/classes">
			<include name="**/*.java" />
			<include name="**/*.xml" />
			<include name="**/*.properties" />
			<classpath refid="classpath"/>
		</javac>

		<copy todir="${build.dir}/${project.name}/WEB-INF/classes">
			<fileset dir="${src.java.dir}">
				<include name="**/*.xml" />
				<include name="**/*.tld" />
				<include name="**/*.properties" />
			</fileset>
		</copy>

		<copy todir="${build.dir}/${project.name}/WEB-INF">
			<fileset dir="${web.dir}/WEB-INF">
				<include name="*.xml" />
				<include name="*.tld" />
			</fileset>
		</copy>

		<copy todir="${build.dir}/${project.name}/">
			<fileset dir="${web.dir}">
				<include name="*.html" />
				<include name="*.gif" />
				<include name="*.jpg" />
				<include name="*.jsp" />
				<include name="*.xml" />
				<include name="*.css" />
			</fileset>
		</copy>
		<!-- repertoire include -->
		<copy todir="${build.dir}/${project.name}/inc">
			<fileset dir="${web.dir}/inc">
				<include name="*.html" />
				<include name="*.jsp" />
				<include name="*.inc" />
			</fileset>
		</copy>

		<copy todir="${build.dir}/${project.name}/css">
			<fileset dir="${web.dir}/css">
				<include name="*.css" />
			</fileset>
		</copy>
		<copy todir="${build.dir}/${project.name}/META-INF">
			<fileset dir="${web.dir}/META-INF">
				<include name="*.MF" />
			</fileset>
		</copy>

		<!-- Images -->
		<copy todir="${build.dir}/${project.name}/images">
			<fileset dir="${web.dir}/images">
				<include name="**/*.gif" />
				<include name="**/*.jpg" />
				<include name="**/*.png" />
			</fileset>
		</copy>
	</target>

	<!-- Construction du WAR -->
	<target name="build.war" depends="build">
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<war destfile="${dist.dir}/${project.name}.war" webxml="${build.dir}/${project.name}/WEB-INF/web.xml" 
			excludes="${build.dir}/${project.name}/WEB-INF/web.xml" 
			manifest="${build.dir}/${project.name}/META-INF/MANIFEST.MF">
			<fileset dir="${build.dir}/${project.name}/">
				<include name="**/*.*" />
			</fileset>
		</war>
		<delete dir="${build.dir}" />

	</target>

	<!-- Copie du fichier dans tomcat -->
	<target name="copy2tomcat" depends="build.war">
		<!-- Suppression anciens fichiers -->
		<delete dir="${tomcat.webapps.dir}/${project.name}" />
		<delete file="${tomcat.webapps.dir}/${project.name}.war" />
		<!-- Copie des nouveaux fichiers -->
		<copy todir="${tomcat.webapps.dir}">
			<fileset dir="${dist.dir}">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<!-- Lancement de Tomcat -->
	<target name="runTomcat" depends="copy2tomcat">
		<exec 
			command="${tomcat.webapps.bin}/startup.bat"
			dir="${tomcat.webapps.bin}"
		/>
	</target>

	<!-- Suppression repertoire de logs -->
	<target name="clearLogs">
		<delete dir="${project.logs}" />
		<mkdir dir="${project.logs}" />
	</target>

</project>

